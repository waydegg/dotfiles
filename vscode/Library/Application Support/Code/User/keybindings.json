[
  // Font Zoom
  {
    "key": "cmd+shift+=",
    "command": "editor.action.fontZoomIn"
  },
  {
    "key": "cmd+shift+-",
    "command": "editor.action.fontZoomOut"
  },
  // Vim toggle
  {
    "key": "ctrl+alt+v",
    "command": "toggleVim",
    "when": "editorTextFocus"
  },
  // --- Tmux-like "panel" navigation -----------------------------------------
  // Maximize panel
  {
    "key": "ctrl+space m",
    "command": "workbench.action.togglePanel",
    "when": "vim.active && vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "ctrl+space m",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "vim.active && vim.mode == 'Normal' && terminalFocus"
  },
  // Panel navigation
  {
    "key": "ctrl+space j",
    "command": "workbench.action.focusPanel",
    "when": "vim.active && vim.mode == 'Normal' && !terminalFocus"
  },
  {
    "key": "ctrl+space k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "vim.active && vim.mode == 'Normal' && terminalFocus"
  },
  // V-split terminal
  {
    "key": "ctrl+space v",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  // Create terminal
  {
    "key": "ctrl+space c",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  // Rename terminal
  {
    "key": "ctrl+space ,",
    "command": "workbench.action.terminal.rename",
    "when": "terminalFocus"
  },
  // Navigate terminal panes
  {
    "key": "ctrl+space l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+space h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  // Navigate terminal "groups"
  {
    "key": "ctrl+space n",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+space p",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus"
  },
  // Kill terimal
  {
    "key": "ctrl+space x",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  // --- Vim-like editor navigation -----------------------------------------
  // "Buffer" navigation
  {
    "key": "shift+l",
    "command": "workbench.action.nextEditorInGroup",
    "when": "vim.active && vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "shift+h",
    "command": "workbench.action.previousEditorInGroup",
    "when": "vim.active && vim.mode == 'Normal' && editorTextFocus"
  },
  // "Window" navigation
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusLeftGroup",
    "when": "vim.active && vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.focusBelowGroup",
    "when": "vim.active && vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusAboveGroup",
    "when": "vim.active && vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusRightGroup",
    "when": "vim.active && vim.mode == 'Normal' && editorTextFocus"
  },
  // --- Misc -----------------------------------------------------------------
  // Toggle sidebar selection
  // {
  //   "key": "space e",
  //   "command": "workbench.files.action.focusFilesExplorer",
  //   "when": "vim.active && vim.mode == 'Normal' && editorTextFocus"
  // },
  // {
  //   "key": "space e",
  //   "command": "workbench.action.toggleSidebarVisibility",
  //   "when": "vim.active && vim.mode == 'Normal' && !editorTextFocus && !terminalFocus"
  // },
  // Maximize editor group
  {
    "key": "space m",
    "command": "workbench.action.toggleEditorWidths",
    "when": "vim.active && vim.mode == 'Normal' && editorTextFocus"
  },
  // --- Removed keybinds -----------------------------------------------------
  {
    "key": "cmd+k e",
    "command": "-workbench.files.action.focusOpenEditorsView",
    "when": "workbench.explorer.openEditorsView.active"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  }
]
