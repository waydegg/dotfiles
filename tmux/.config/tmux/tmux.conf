# --- Keybinds ----------------------------------------------------------------
# Rebind prefix
# unbind C-b
set -g prefix C-Space
# set -g prefix2 C-a

bind C-Space send-prefix
# bind C-a run-shell 'tmux send-prefix'
# bind C-b send-prefix \; send-prefix

# Toggle prefix (for nested sessions)
bind-key -T root C-b \
  set prefix None \;\
  set key-table off \;\
  set status-bg "gray" \;\
  refresh-client -S

bind-key -T off C-b \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-bg \;\
  refresh-client -S

# Source .tmux.conf
bind r source ~/.config/tmux/tmux.conf\; display "Sourced tmux.conf"
 
# Reorder window
bind -n C-S-Left swap-window -d -t -1 
bind -n C-S-Right swap-window -d -t +1

# # Resizing pane
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5

# Split panes
bind b split-window -v -c "#{pane_current_path}" 
bind v split-window -h -c "#{pane_current_path}" 
unbind %
unbind '"'

# Disable toggling between layouts
unbind space

# Toggle maximize pane
bind m resize-pane -Z
unbind z

# Kill window/pane
bind X kill-window
bind x kill-pane

# Go to last window
bind L last-window

# Tmux/Neovim movement
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|ssh?|n?vim?x?)(diff)?$'"
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|ssh|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

bind h run "tmux select-pane -L"
bind j run "tmux select-pane -D"
bind k run "tmux select-pane -U"
bind l run "tmux select-pane -R"
# bind C-\\ run "tmux select-pane -l"

# "break" pane into its own window
bind B break-pane

# switch to next/previous session 
bind N switch-client -n
bind P switch-client -p

# --- Settings -----------------------------------------------------------------
set -g escape-time 0
set -g history-limit 5000
set -g mouse on
set -gw mode-keys vi
set -g base-index 1
set -gw pane-base-index 1
set -g allow-rename off
set -g renumber-windows on
set -g status-position top
set -g status-justify "left"
set -g set-clipboard on

# Tab format
tmux_tab_format=" #{window_index} #{window_name} "
set -g window-status-current-format "$tmux_tab_format"
set -g window-status-format "$tmux_tab_format"

# -- Styling ---------------------------------------------------------------------------
# Enable truecolor and undercurls
set -g default-terminal "alacritty"
set -ag terminal-overrides ",alacritty:RGB"

# allow the title bar to adapt to whatever host you connect to
set -g set-titles on
set -g set-titles-string "#T"

tmux_trans="#[fg=default]#[bg=default]"

# Misc styles
set -g mode-style fg=yellow,bg=white
set -g message-style fg=default,bg=white
set -g status-style fg=default,bg=white

# Left status bar
set -g status-left-length 1000


# run-shell "fish $HOME/.config/tmux/test.fish" 
set -g status-left " #[bg=default][#{session_name}]${tmux_trans} " 


# Right status bar
set -g status-right-length 1000

tmux_norm_prompt=""
cmd_prompt="#[fg=white]#[bg=green] CMD "
copy_prompt="#[fg=white]#[bg=orange] COPY "
sync_prompt="#[fg=white]#[bg=red] SYNC "

prefix_prompt="#{?client_prefix,$cmd_prompt,#{?pane_in_mode,$copy_prompt,#{?synchronize-panes,$sync_prompt,$tmux_norm_prompt}}}"

tmux_zoom_prompt="#[fg=white]#[bg=blue]#[bold] ZOOM $tmux_trans#[none]"

set -g status-right "#{?window_zoomed_flag,$tmux_zoom_prompt,}${tmux_trans} ${prefix_prompt}${tmux_trans} %A, %d %b %Y %l:%M %p   "

# Window status
set -gw window-status-style fg=brightyellow,bg=default
set -gw window-status-current-style fg=white,bg=black

# Pane border
set -g pane-border-lines heavy
set -g pane-border-style fg=white
set -g pane-border-status top
set -g pane-border-format " #{pane_index} "
